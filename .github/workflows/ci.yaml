# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
  pull_request:
  schedule:
    - cron: '53 0 * * *' # Daily at 00:53 UTC

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox
        # TODO: Consider replacing with custom image on self-hosted runner OR pinning version
        run: python3 -m pip install tox
      - name: Run linters
        run: tox run -e lint

  unit-test:
    name: Unit tests
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox
        # TODO: Consider replacing with custom image on self-hosted runner OR pinning version
        run: python3 -m pip install tox
      - name: Run tests
        run: tox run -e format
      - name: Run tests
        run: tox run -e unit

  # lib-check:
  #   name: Check libraries
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Check libs
  #       uses: canonical/charming-actions/check-libraries@2.3.0
  #       with:
  #         credentials: ${{ secrets.CHARMHUB_TOKEN }}
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         use-labels: false
  #         fail-build: ${{ github.event_name == 'pull_request' }}

  build:
    name: Build charms
    uses: canonical/data-platform-workflows/.github/workflows/build_charm.yaml@v26.0.0
    with:
      cache: true
      charmcraft-snap-channel: latest/beta/data-platform  # TODO: remove after charmcraft 3.3 stable release

  integration-test:
    strategy:
      fail-fast: false
      matrix:
        tox-environments:
          - integration-charm
          - integration-tls
          - integration-azure
          - integration-logs
        runner:
          - ubuntu-22.04
          - [self-hosted, linux, AMD64, X64, large, jammy]
        exclude:
          - tox-environments: integration-azure           # Don't test azure twice
            runner: [self-hosted, linux, AMD64, X64, large, jammy]
          - tox-environments: integration-charm           # Don't test charm twice
            runner: [self-hosted, linux, AMD64, X64, large, jammy]

    name: ${{ matrix.tox-environments }}
    needs:
      - lint
      - unit-test
      - build
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
      - name: Get prefsrc
        run: |
          echo "IPADDR=$(ip -4 -j route get 2.2.2.2 | jq -r '.[] | .prefsrc')" >> $GITHUB_ENV
      - name: Setup operator environment
        uses: charmed-kubernetes/actions-operator@main
        with:
          juju-channel: 3.4/stable
          provider: microk8s
          channel: 1.28-strict/stable
          microk8s-group: snap_microk8s
          microk8s-addons: "hostpath-storage dns minio metallb:${{ env.IPADDR }}-${{ env.IPADDR }}"
      - name: Setup microceph
        id: microceph
        if: ${{ matrix.tox-environments }} == 'integration-tls'
        uses: canonical/microceph-action@v0.2
        with:
          channel: 'latest/edge'
          accesskey: 'accesskey'
          secretkey: 'secretkey'
          bucket: 'testbucket'
          osdsize: '3G'
      - name: Setup Azure CLI
        id: Azure
        run: |
          sudo snap install azcli
      - name: Download packed charm(s)
        uses: actions/download-artifact@v4
        with:
          artifact-prefix: ${{ needs.build.outputs.artifact-prefix }}
          merge-multiple: true
      - name: Select tests
        id: select-tests
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> $GITHUB_OUTPUT
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> $GITHUB_OUTPUT
          fi
      - name: Run integration tests
        env:
          AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          CI_PACKED_CHARMS: ${{ needs.build.outputs.charms }}
        run: tox run -e ${{ matrix.tox-environments }} -- -m '${{ steps.select-tests.outputs.mark_expression }}'
