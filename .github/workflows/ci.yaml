name: Spark History Server Testing
on:
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: python3 -m pip install tox
      - name: Run linters
        run: tox -e lint

  unit-test:
    name: Unit tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: python -m pip install tox
      - name: Run tests
        run: tox -e unit

  integration-test:
    name: Integration tests (microk8s)
    timeout-minutes: 120
    needs:
      - lint
      - unit-test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
      - name: Setup operator environment
        id: operator
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: microk8s
          # This is needed until https://bugs.launchpad.net/juju/+bug/1977582 is fixed
          bootstrap-options: "--agent-version 2.9.29"
      - name: Setup minio
        id: minio
        run: |
          sudo microk8s enable minio
          sudo apt-get update -q -y
          sudo apt-get install -y python3-pip
          pip install boto3

          attempt=1
          while [ $attempt -le 10 ]
          do
            echo "attempt=$attempt"
            access_key=$(sudo microk8s.kubectl get secret -n minio-operator microk8s-user-1 -o jsonpath='{.data.CONSOLE_ACCESS_KEY}' | base64 -d)
            echo "access_key=$access_key"
            secret_key=$(sudo microk8s.kubectl get secret -n minio-operator microk8s-user-1 -o jsonpath='{.data.CONSOLE_SECRET_KEY}' | base64 -d)
            echo "secret_key=$secret_key"
            endpoint_ip=$(sudo microk8s.kubectl get services -n minio-operator | grep minio | awk '{ print $3 }')
            endpoint="http://$endpoint_ip:80"
            echo "endpoint=$endpoint"
            
            if [ -z "$access_key" ] || [ -z "$secret_key" ] || [ -z "$endpoint_ip" ]
            then
                  sleep 3
                  let "attempt+=1" 
            else
                  echo "s3 params setup complete..."
                  break
            fi
          done
          
          echo "Waiting for 120 secs for minio endpoint to stabilize...."
          sleep 120

          echo "Executing ./tests/integration/setup_s3_bucket_for_history_server.py $endpoint $access_key $secret_key"
          python3 ./tests/integration/setup_s3_bucket_for_history_server.py $endpoint $access_key $secret_key

          echo "MINIO_ENDPOINT=$endpoint" >> $GITHUB_OUTPUT
          echo "MINIO_ACCESS_KEY=$access_key" >> $GITHUB_OUTPUT
          echo "MINIO_SECRET_KEY=$secret_key" >> $GITHUB_OUTPUT
      - name: Run spark job
        id: spark
        run: |
          sudo snap install spark-client --edge
          mkdir -p ~/.kube
          sudo microk8s config | tee ~/.kube/config
          
          spark-client.service-account-registry create --username hello \
                          --conf spark.hadoop.fs.s3a.access.key=${{ steps.minio.outputs.MINIO_ACCESS_KEY }} \
                          --conf spark.hadoop.fs.s3a.secret.key=${{ steps.minio.outputs.MINIO_SECRET_KEY }} \
                          --conf spark.hadoop.fs.s3a.endpoint=${{ steps.minio.outputs.MINIO_ENDPOINT }} \
                          --conf spark.hadoop.fs.s3a.aws.credentials.provider=org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider \
                          --conf spark.hadoop.fs.s3a.connection.ssl.enabled=false \
                          --conf spark.hadoop.fs.s3a.path.style.access=true \
                          --conf spark.eventLog.enabled=true \
                          --conf spark.eventLog.dir=s3a://history-server/spark-events/ \
                          --conf spark.history.fs.logDirectory=s3a://history-server/spark-events/ 
          
          spark-client.service-account-registry get-conf --username hello
          
          spark-client.spark-submit --username hello --conf spark.kubernetes.executor.request.cores=0.1 --class org.apache.spark.examples.SparkPi local:///opt/spark/examples/jars/spark-examples_2.12-3.3.2.jar 100
      - name: Run integration tests
        id: test
        run: tox -e integration
        env:
          MINIO_ENDPOINT : ${{ steps.minio.outputs.MINIO_ENDPOINT }}
          MINIO_ACCESS_KEY : ${{ steps.minio.outputs.MINIO_ACCESS_KEY }}
          MINIO_SECRET_KEY : ${{ steps.minio.outputs.MINIO_SECRET_KEY }}
